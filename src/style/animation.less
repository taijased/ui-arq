// main size const
@main-height: 100vh;
@main-width: 100vh;
@height-footer: 10vh; 
@margin-container: 5vw;

// aside size const

@width-aside-left: 50vw;
@width-aside-right: 50vw;
@height-aside: @main-height - 2*@height-footer;
@fade-right-width: -500px;
@fade-left-width: 500px;
// const time animation

@time-description: .25s;

// const color

@primary: rgba(255, 255, 255, 1);
@gray: rgba(255, 255, 255, 0.4);
@btn-primary: rgb(231,70,37);
// form const
@form-height: 50px;
@btn-width: 150px;
@btn-height: 35px;
@input-width: 200px;
@input-height: @btn-height;

// font const
@subtitle-size: 12px;

// mobile size
@md: ~"(max-width: 1000px)";
@xs: ~"(max-width: 576px)";
@sm: ~"(max-width: 769px)";



@webkit: true;
@moz: false;
@ms: false;
@o: false;

.hardwareAccel() {
  .prefixed(transform, perspective(1px) translateZ(0));
}

.forceBlockLevel() {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

.hacks() {
  .forceBlockLevel();
  .hardwareAccel();
}



.prefixed(@property, @value) {
  & when (@webkit =true) {
    -webkit-@{property}: @value;
  }

  & when (@moz =true) {
    -moz-@{property}: @value;
  }

  & when (@ms =true) {
    -ms-@{property}: @value;
  }

  & when (@o =true) {
    -o-@{property}: @value;
  }

  @{property}: @value;
}

// prefix keyframes
.keyframes(@name;

@content) {
  & when (@webkit =true) {
    @-webkit-keyframes @name {
      @content();
    }
  }

  & when (@moz =true) {
    @-moz-keyframes @name {
      @content();
    }
  }

  & when (@ms =true) {
    @-ms-keyframes @name {
      @content();
    }
  }

  & when (@o =true) {
    @-o-keyframes @name {
      @content();
    }
  }

  @keyframes @name {
    @content();
  }
}


// hover animation
.underline-from-right() {

  .hacks();
  position: relative;
  overflow: hidden;

  &:before {
    content: "";
    position: absolute;
    z-index: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: white;
    height: 1px;
    .prefixed(transition-property, "left");
    .prefixed(transition-duration, @time-description);
    .prefixed(transition-timing-function, ease-out);

    &:hover,
    &:focus,
    &:active {
      border: 1px solid red;
    }
  }

  &:hover,
  &:focus,
  &:active {
    cursor: pointer;

    &:before {
      left: 100%;
    }
  }

}